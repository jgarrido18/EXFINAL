//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EXFIN
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ExamenEntities : DbContext
    {
        public ExamenEntities()
            : base("name=ExamenEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<catedratico> catedratico { get; set; }
        public virtual DbSet<CURSO> CURSO { get; set; }
    
        public virtual ObjectResult<P_CATEDRATICO_Result> P_CATEDRATICO(Nullable<int> iD, string nOMBRE, string aPELLIDOS, string dPI, string aCTIVO, string oPTIONS)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var aPELLIDOSParameter = aPELLIDOS != null ?
                new ObjectParameter("APELLIDOS", aPELLIDOS) :
                new ObjectParameter("APELLIDOS", typeof(string));
    
            var dPIParameter = dPI != null ?
                new ObjectParameter("DPI", dPI) :
                new ObjectParameter("DPI", typeof(string));
    
            var aCTIVOParameter = aCTIVO != null ?
                new ObjectParameter("ACTIVO", aCTIVO) :
                new ObjectParameter("ACTIVO", typeof(string));
    
            var oPTIONSParameter = oPTIONS != null ?
                new ObjectParameter("OPTIONS", oPTIONS) :
                new ObjectParameter("OPTIONS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_CATEDRATICO_Result>("P_CATEDRATICO", iDParameter, nOMBREParameter, aPELLIDOSParameter, dPIParameter, aCTIVOParameter, oPTIONSParameter);
        }
    
        public virtual ObjectResult<P_CURSO_Result> P_CURSO(Nullable<int> iD, Nullable<int> iD_CATEDRATICO, string nOMBRE, string aPROVADO, string oPTIONS)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iD_CATEDRATICOParameter = iD_CATEDRATICO.HasValue ?
                new ObjectParameter("ID_CATEDRATICO", iD_CATEDRATICO) :
                new ObjectParameter("ID_CATEDRATICO", typeof(int));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var aPROVADOParameter = aPROVADO != null ?
                new ObjectParameter("APROVADO", aPROVADO) :
                new ObjectParameter("APROVADO", typeof(string));
    
            var oPTIONSParameter = oPTIONS != null ?
                new ObjectParameter("OPTIONS", oPTIONS) :
                new ObjectParameter("OPTIONS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_CURSO_Result>("P_CURSO", iDParameter, iD_CATEDRATICOParameter, nOMBREParameter, aPROVADOParameter, oPTIONSParameter);
        }
    }
}
